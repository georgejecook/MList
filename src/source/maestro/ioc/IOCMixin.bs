namespace MIOC

function init()
  m.global.addFields({ "_mIocContainer": createObject("roSGNode", "Node") })
end function

function getIOCContainer()
  'note; this is more efficient in maestro framework, as eachview
  'has this stored on m automatically on init
  container = m._mIocContainer
  
  if container = invalid
    container = m.global._mIocContainer
    m._mIocContainer = m.global._mIocContainer
    if container = invalid
      ? "Error : you must call initIOC in your main scene before using!"
    end if
  end if
  
  return container
end function

function getInstance(name)
  return MIOC.getIOCContainer()[name]
end function

' /**
'  * @member setInstance
'  * @memberof module:MIO
'  * @instance
'  * @function
'  * @description sets a node instance on the DI container
'  * @param {field} name of the instance
'  * @returns {boolean} true if added
'  */
function setInstance(field, instance)
  container = MIOC.getIOCContainer()
  
  if type(instance) = "<uninitialized>" or instance = invalid
    ? "ERROR - tried to add invalid instance to IOC container for field " ; field
    return false
  end if
  
  if container.doesExist(field)
    container[field] = instance
  else
    newFields = {}
    newFields[field] = instance
    container.addfields(newFields)
  end if

  return true
end function

function initClass(instance)
  instance.getInstance = MIOC.getInstance
  instance.setInstance = MIOC.setInstance
end function

end namespace